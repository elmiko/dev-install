---
- hosts: standalone
  become: true
  become_user: stack
  gather_facts: false
  vars_files: vars/defaults.yaml
  roles:
  - network_info

  tasks:

  - name: Get minimum ansible facts
    setup:
      gather_subset: min

  - name: Install the tripleo client
    yum:
      name:
      - python3-tripleoclient
    become: true
    become_user: root
    tags:
      - install

  - name: Install the Octavia Amphora Images
    yum:
      name:
      - octavia-amphora-image-x86_64
    become: true
    become_user: root
    tags:
      - install
  # The Amphora image is broken for OSP17, see:
  # https://review.rdoproject.org/r/32023
  # Until then this is fine (tested) to use the latest
  # image from RDO:
  - name: Download the latest Amphora image for Octavia
    get_url:
      url: https://images.rdoproject.org/octavia/master/amphora-x64-haproxy-centos.qcow2
      dest: "{{ ansible_env.HOME }}/amphora.qcow2"
    tags:
      - file_downloads
  - name: Create standalone_parameters.yaml
    template:
      src: standalone_parameters.yaml.j2
      dest: "{{ ansible_env.HOME }}/standalone_parameters.yaml"
    tags:
      - file_creation
  - name: Create dev-install_net_config.yaml
    template:
      src: dev-install_net_config.yaml.j2
      dest: "{{ ansible_env.HOME }}/dev-install_net_config.yaml"

  - name: Create containers-prepare-parameters.yaml
    copy:
      src: "files/containers-prepare-parameters.yaml"
      dest: "{{ ansible_env.HOME }}/containers-prepare-parameters.yaml"

  # NOTE(mdbooth): The deploy step consistently fails to return. It fails in a
  # manner consistent with a hung SSH connection. The following dance is an
  # effort to never have a very long-running ansible task which might hang.
  - name: Set deploy log file location
    set_fact:
      tripleo_deploy_logs: "{{ ansible_env.HOME }}/tripleo-deploy.log"
      # Create this in /usr/local/bin because we execute it with systemd-run,
      # which requires an executable SELinux label
      tripleo_deploy_path: "/usr/local/bin/tripleo-deploy.sh"

  - name: Create the deploy script
    template:
      src: tripleo-deploy.sh.j2
      dest: "{{ tripleo_deploy_path }}"
      owner: root
      group: root
      mode: 0755
    vars:
      stack_home: "{{ ansible_env.HOME }}"
    become: true
    become_user: root

  - name: Truncate the log file
    copy:
      dest: "{{ tripleo_deploy_logs }}"
      content: ""

  # NOTE(mdbooth): Despite it using sudo, we want to run the deploy script as
  # the stack user so it gets the stack user's environment and creates things in
  # the stack user's home directory.

  - name: Cleanup in case of previous network failure.
    command: systemctl reset-failed
    become: true
    become_user: root
    tags:
      - install

  - name: Execute tripleo deploy
    command: systemd-run --unit=tripleo-deploy --uid=stack --gid=wheel -- {{ tripleo_deploy_path }} 2>> {{ tripleo_deploy_logs }}
    become: true
    become_user: root
    tags:
      - install

  - name: Wait for the deploy to complete
    command: systemctl show -p SubState --value tripleo-deploy
    register: tripleo_deploy_state
    until: tripleo_deploy_state is not failed and tripleo_deploy_state.stdout != "running"
    retries: 120 # 2 hours
    delay: 60
    tags:
      - install

  - name: Cleanup and exit on failure
    block:
    - name: Reset transient systemd unit
      command: systemctl reset-failed tripleo-deploy
      become: true
      become_user: root

    - fail:
        msg: TripleO deploy failed. See {{ tripleo_deploy_logs }} for details.
    when: tripleo_deploy_state.stdout == "failed"

    tags:
      - cleanup
      - install
